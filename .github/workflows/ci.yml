name: CI
on:
  push:
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      fail-fast: false

      matrix:
        neovim_branch:
          - 'nightly'

    env:
      NVIM_TEST_VERSION: ${{ matrix.neovim_branch }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: lewis6991/gh-actions-lua@master
        with:
          luaVersion: "5.1.5"

      - uses: leafo/gh-actions-luarocks@v4

      - name: Download nvim-test
        run: make nvim-test

      - name: Run Test
        run: make test

  docs:
    runs-on: ubuntu-latest
    needs: tests
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v4
      - name: panvimdoc
        uses: kdheepak/panvimdoc@main
        with:
          vimdoc: fzf-lua-extra
          version: "Neovim >= 0.10.0"
          demojify: true
          treesitter: true
      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore(build): auto-generate vimdoc"
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
  release:
    name: release
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - docs
      - tests
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: simple
          package-name: fzf-lua-extra
      - uses: actions/checkout@v4
      - name: tag stable versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d stable || true
          git push origin :stable || true
          git tag -a stable -m "Last Stable Release"
          git push origin stable

