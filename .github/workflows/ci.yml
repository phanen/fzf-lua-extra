name: CI
on:
  push:
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      fail-fast: false

      matrix:
        neovim_branch:
          - "nightly"

    env:
      NVIM_TEST_VERSION: ${{ matrix.neovim_branch }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: lewis6991/gh-actions-lua@master
        with:
          luaVersion: "5.1.5"

      - uses: leafo/gh-actions-luarocks@v4

      - name: Download nvim-test
        run: make nvim-test

      - name: Download fzf
        run: |
          wget -O - https://github.com/junegunn/fzf/releases/download/v0.66.0/fzf-0.66.0-linux_amd64.tar.gz | tar zxfv -
          sudo mv ./fzf /bin

      - name: Run Test
        env: # we use "gh"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make test

  docs:
    runs-on: ubuntu-latest
    needs: tests
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v5
      - name: Install Neovim
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: "stable"
      - name: Generate README providers section
        run: nvim -l scripts/gen_readme.lua
      - name: panvimdoc
        uses: kdheepak/panvimdoc@main
        with:
          vimdoc: fzf-lua-extra
          version: "Neovim >= 0.10.0"
          demojify: true
          treesitter: true
      - name: Check doc changes
        id: check_doc_changes
        run: |
          set -e
          git fetch
          changed_files=$(git diff --name-only HEAD doc/)
          abort_commit=true
          for file in $changed_files; do
            # Check if only the first line is changed
            diff_output=$(git diff HEAD "$file")
            # Count changed lines not in the first line
            if echo "$diff_output" | grep -E '^@@' | grep -v '@@ -1,'; then
              abort_commit=false
              break
            fi
          done
          echo "abort_commit=$abort_commit" >> $GITHUB_OUTPUT
      - name: Push changes
        if: steps.check_doc_changes.outputs.abort_commit == 'false'
        uses: stefanzweifel/git-auto-commit-action@v7
        with:
          commit_message: "chore(build): auto-generate vimdoc"
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
  release:
    name: release
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - docs
      - tests
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: simple
          package-name: fzf-lua-extra
      - uses: actions/checkout@v5
      - name: tag stable versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d stable || true
          git push origin :stable || true
          git tag -a stable -m "Last Stable Release"
          git push origin stable
